<idea-plugin>
    <id>com.github.fiadleh.codesmellsplugin</id>
    <name>Live Code Smells Detector</name>
    <vendor>fiadleh</vendor>

    <!-- Product and plugin compatibility requirements
     https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>

    <!--
                <depends>com.intellij.java</depends>
             -->

        <extensions defaultExtensionNs="com.intellij">
            <applicationService serviceImplementation="com.github.fiadleh.codesmellsplugin.services.MyApplicationService"/>
        </extensions>
    <!--
            <extensions defaultExtensionNs="com.intellij">
                <toolWindow id="Sample Calendar" secondary="true" icon="AllIcons.General.Modified" anchor="right"
                            factoryClass="org.intellij.sdk.toolWindow.MyToolWindowFactory"/>
            </extensions>
    -->
            <extensions defaultExtensionNs="com.intellij">
                <!--
                  Extend the IntelliJ Platform local inspection type, and connect it to the implementation class in this plugin.
                  <localInspection> type element is applied within the scope of a file under edit.
                  It is preferred over <inspectionToolProvider>
                    @see intellij.platform.resources.LangExtensionPoints
                    @see com.intellij.codeInspection.InspectionProfileEntry
                  Attributes:
                    language= Language ID
                    shortName= Not specified, will be computed by the underlying implementation classes.
                    displayName= The string to be shown in the Preferences | Editor | Inspections panel
                        The displayName gets registered to identify this inspection.
                        Can be localized using key= and bundle= attributes instead.
                    groupPath= Defines the outermost grouping for this inspection in
                        the Preferences | Editor | Inspections panel. Not localized.
                    groupBundle= Name of *.bundle file to translate groupKey.
                        In this case reuse an IntelliJ Platform bundle file from intellij.platform.resources.en
                    groupKey= Key to use for translation subgroup name using groupBundle file.
                        In this case reuse the IntelliJ Platform subcategory "Probable bugs"
                    enabledByDefault= Inspection state when Inspections panel is created.
                    level= The default level of error found by this inspection, e.g. INFO, ERROR, etc.
                        @see com.intellij.codeHighlighting.HighlightDisplayLevel
                    implementationClass= FQN of inspection implementation
                -->

        <!--
                <localInspection language="JAVA"
                                 displayName="SDK: '==' or '!=' used instead of 'equals()'"
                                 groupPath="Java"
                                 groupBundle="messages.InspectionsBundle"
                                 groupKey="group.names.probable.bugs"
                                 enabledByDefault="true"
                                 level="WARNING"
                                 implementationClass="com.github.fiadleh.codesmellsplugin.codeInspections.ComparingReferencesInspection"/>
               -->
        <localInspection language="JAVA"
                         groupPath="Java"
                         groupBundle="messages.InspectionsBundle"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.github.fiadleh.codesmellsplugin.codesmells.dataclumps.DataclumpsInspection"/>

        <localInspection language="JAVA"
                         groupPath="Java"
                         groupBundle="messages.InspectionsBundle"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.github.fiadleh.codesmellsplugin.codesmells.globaldata.GlobalDataInspection"/>

        <!--   -->
    </extensions>

    <applicationListeners>
        <listener class="com.github.fiadleh.codesmellsplugin.listeners.ProjectOpenCloseListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>
</idea-plugin>
